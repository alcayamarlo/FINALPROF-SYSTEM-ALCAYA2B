/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin;

import Successfull.noAccount;
import config.Session;
import config.dbConnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author alcay
 */
public class createUserForm extends javax.swing.JFrame {

    /**
     * Creates new form createUserForm
     */
    public createUserForm() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }

      public boolean duplicateCheck() {
    dbConnect dbc = new dbConnect();
    try {
        String query = "SELECT * FROM users WHERE username = '" + un.getText() + "' OR email = '" + em.getText() + "'";
        ResultSet resultSet = dbc.getData(query);

        if (resultSet.next()) {
            String email = resultSet.getString("email");
            if (email.equals(em.getText())) {
                JOptionPane.showMessageDialog(null, "Email is Already used");
                em.setText("");
            }
            String username = resultSet.getString("username");
            if (username.equals(un.getText())) { //Error: You were comparing username with email's text field. changed to un1's text field
                JOptionPane.showMessageDialog(null, "Username is Already used"); //Error: Changed the message to reflect username duplication
                un.setText("");
            }
            return true;
        } else {
            return false;
        }
    } catch (SQLException ex) {
        System.out.println("" + ex);
        return false;
    }
}
  
  public boolean updateCheck() {
    dbConnect dbc = new dbConnect();
    try {
        String query = "SELECT * FROM users WHERE (username = '" + un.getText() + "' OR email = '" + em.getText() + "')AND p_id!= '"+p_id.getText()+"'";
        ResultSet resultSet = dbc.getData(query);

        if (resultSet.next()) {
            String email = resultSet.getString("email");
            if (email.equals(em.getText())) {
                JOptionPane.showMessageDialog(null, "Email is Already used");
                em.setText("");
            }
            String username = resultSet.getString("username");
            if (username.equals(un.getText())) { //Error: You were comparing username with email's text field. changed to un1's text field
                JOptionPane.showMessageDialog(null, "Username is Already used"); //Error: Changed the message to reflect username duplication
                un.setText("");
            }
            return true;
        } else {
            return false;
        }
    } catch (SQLException ex) {
        System.out.println("" + ex);
        return false;
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        utype = new javax.swing.JComboBox<>();
        p_id = new textfield.TextField();
        jLabel31 = new javax.swing.JLabel();
        fn = new textfield.TextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        ct = new textfield.TextField();
        jLabel28 = new javax.swing.JLabel();
        em = new textfield.TextField();
        cn = new textfield.TextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        un = new textfield.TextField();
        pass = new textfield.PasswordField();
        jLabel33 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        clear = new rojerusan.RSMaterialButtonCircle();
        add = new rojerusan.RSMaterialButtonCircle();
        update = new rojerusan.RSMaterialButtonCircle();
        delete = new rojerusan.RSMaterialButtonCircle();
        jLabel24 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(204, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 51, 255)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        utype.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        utype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User Type ", "Admin", "Patient", "Doctor" }));
        utype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utypeActionPerformed(evt);
            }
        });
        jPanel4.add(utype, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 640, 150, 40));

        p_id.setBackground(new java.awt.Color(204, 255, 255));
        p_id.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        p_id.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        p_id.setLabelText("User ID");
        jPanel4.add(p_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 330, -1));

        jLabel31.setFont(new java.awt.Font("Segoe UI Semilight", 0, 17)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dashboardImage/user.png"))); // NOI18N
        jPanel4.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, -1, 60));

        fn.setBackground(new java.awt.Color(204, 255, 255));
        fn.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        fn.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        fn.setLabelText("Enter your Full Name");
        jPanel4.add(fn, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 330, 60));

        jLabel25.setFont(new java.awt.Font("Segoe UI Semilight", 0, 17)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dashboardImage/user.png"))); // NOI18N
        jPanel4.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, -1, 60));

        jLabel29.setFont(new java.awt.Font("Segoe UI Semilight", 0, 17)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dashboardImage/user.png"))); // NOI18N
        jPanel4.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, 60));

        ct.setBackground(new java.awt.Color(204, 255, 255));
        ct.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        ct.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        ct.setLabelText("Enter your City and Address");
        ct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctActionPerformed(evt);
            }
        });
        jPanel4.add(ct, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 240, 330, 60));

        jLabel28.setFont(new java.awt.Font("Segoe UI Semilight", 0, 17)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dashboardImage/user.png"))); // NOI18N
        jPanel4.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, -1, 60));

        em.setBackground(new java.awt.Color(204, 255, 255));
        em.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        em.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        em.setLabelText("Enter your Email");
        jPanel4.add(em, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, 330, 60));

        cn.setBackground(new java.awt.Color(204, 255, 255));
        cn.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        cn.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        cn.setLabelText("Enter your Contact No");
        jPanel4.add(cn, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 400, 330, 60));

        jLabel27.setFont(new java.awt.Font("Segoe UI Semilight", 0, 17)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dashboardImage/user.png"))); // NOI18N
        jPanel4.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 410, -1, 60));

        jLabel26.setFont(new java.awt.Font("Segoe UI Semilight", 0, 17)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dashboardImage/user.png"))); // NOI18N
        jPanel4.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 570, -1, 60));

        un.setBackground(new java.awt.Color(204, 255, 255));
        un.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        un.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        un.setLabelText("Enter your Username");
        un.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unActionPerformed(evt);
            }
        });
        jPanel4.add(un, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 480, 330, 60));

        pass.setBackground(new java.awt.Color(204, 255, 255));
        pass.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        pass.setLabelText("Enter your Password");
        pass.setShowAndHide(true);
        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });
        jPanel4.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 570, 320, -1));

        jLabel33.setFont(new java.awt.Font("Segoe UI Semilight", 0, 17)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dashboardImage/user.png"))); // NOI18N
        jPanel4.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 490, -1, 60));

        status.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User Status", "Approved", "Pending" }));
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });
        jPanel4.add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 640, 150, 40));

        clear.setBackground(new java.awt.Color(255, 51, 51));
        clear.setText("CLEAR");
        clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearMouseClicked(evt);
            }
        });
        jPanel4.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 700, 140, 70));

        add.setBackground(new java.awt.Color(255, 51, 51));
        add.setText("ADD");
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel4.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 700, 140, 70));

        update.setBackground(new java.awt.Color(255, 51, 51));
        update.setText("UPDATE");
        update.setEnabled(false);
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateMouseClicked(evt);
            }
        });
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel4.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 700, 140, 70));

        delete.setBackground(new java.awt.Color(255, 51, 51));
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel4.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 700, 140, 70));

        jLabel24.setFont(new java.awt.Font("Arial Black", 0, 36)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(102, 102, 102));
        jLabel24.setText("MANAGE USERS");
        jPanel4.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, -1, 30));

        jLabel9.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Update Users Information.");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, -1, 30));

        jLabel3.setBackground(new java.awt.Color(51, 51, 255));
        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel3.setText("  X");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, 40, 40));

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 51, 255)));
        jPanel4.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, 40, 40));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 790));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseClicked
        p_id.setText("");
        fn.setText("");
        ct.setText("");
        em.setText("");
        cn.setText("");
        un.setText("");
        pass.setText("");
        utype.setSelectedItem("");
        status.setSelectedItem("");

    }//GEN-LAST:event_clearMouseClicked

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
     
        
    }//GEN-LAST:event_addMouseClicked

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
  if (fn.getText().isEmpty() || ct.getText().isEmpty() || em.getText().isEmpty() || cn.getText().isEmpty() || un.getText().isEmpty() || pass.getText().isEmpty() || utype.getSelectedItem().toString().isEmpty()) {
    JOptionPane.showMessageDialog(null, "All Fields Are Required");
} else {
    if (fn.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Full Name is required");
        fn.setText("");
        return;
    }
    if (ct.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "City & Address is required");
        ct.setText("");
        return;
    }
    if (em.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Email is required");
        em.setText("");
        return;
    }

    String input = cn.getText();
    if (!input.matches("[0-9]{11}")) {
        JOptionPane.showMessageDialog(null, "Please enter a valid contact number (11 digits only)");
        cn.setText("");
        return;
    }

    String email = em.getText();
    String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
    Pattern pattern = Pattern.compile(emailRegex);
    Matcher matcher = pattern.matcher(email);

    if (!matcher.matches()) {
        JOptionPane.showMessageDialog(null, "Please enter a valid email ");
        em.setText("");
        return;
    }

    if (un.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Username is required");
        un.setText("");
        return;
    }

    String password = pass.getText();

    if (password.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Password is required");
        return;
    }
    if (password.length() < 8) {
        JOptionPane.showMessageDialog(null, "Password should have at least 8 characters");
        return;
    }

    String selectedUserType = (String) utype.getSelectedItem();
    if (!("Admin".equals(selectedUserType) || "Patient".equals(selectedUserType) || "Doctor".equals(selectedUserType))) {
        JOptionPane.showMessageDialog(null, "Please select a User Type ");
        return;
    }
            
else {
                    dbConnect dbc = new dbConnect();
                    String checkUsernameQuery = "SELECT COUNT(*) FROM users WHERE username = '" + un.getText() + "'";
                    int usernameCount = dbc.executeQueryForCount(checkUsernameQuery);
                    if (usernameCount > 0) {
                        JOptionPane.showMessageDialog(null, "Username is already taken");
                        return;
                    }
                    
                    String checkEmailQuery = "SELECT COUNT(*) FROM users WHERE email = '" + em.getText() + "'";
                    int emailCount = dbc.executeQueryForCount(checkEmailQuery);
                    if (emailCount > 0) {
                        JOptionPane.showMessageDialog(null, "Email is already registered");
                        return;
                    }
String insertQuery = "INSERT INTO users(fn, cityAddress, email , contactNo, username,password,usertype, status) " +
                     "VALUES('" + fn.getText() + "', '" + ct.getText() + "', '" + em.getText() + 
                     "', '" + cn.getText() + "', '" + un.getText() + "', '" + pass.getText() + 
                     "', '" + utype.getSelectedItem() + "', 'Pending')";

                    if (dbc.insertData(insertQuery) == 0) {
                        JOptionPane.showMessageDialog(null, "Added Successfully");
                    }

                    new ManageUsers().setVisible(true);
                    this.setVisible(false);
                    this.dispose();
                }
            }
    }//GEN-LAST:event_addActionPerformed

    private void updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseClicked
       
    }//GEN-LAST:event_updateMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
   if (fn.getText().isEmpty() || ct.getText().isEmpty() || em.getText().isEmpty() || cn.getText().isEmpty() || un.getText().isEmpty() || pass.getText().isEmpty() || utype.getSelectedItem().toString().isEmpty()) {
  JOptionPane.showMessageDialog(null,"All Fields are Required!");
  
   }else if (pass.getText().length()<8){
       JOptionPane.showMessageDialog(null,"Password character should be 8 above!");
       pass.setText("");
   }else if(updateCheck()){
       System.out.println("Duplicate exist");
       
       
   }else{
        dbConnect dbc = new dbConnect();
        dbc.updateData("UPDATE users SET fn = '"+fn.getText()+"', cityAddress = '"+ct.getText()
                +"', email = '"+em.getText()+"', contactNo = '"+cn.getText()+"', username = '"+un.getText()
                +"', password = '"+pass.getText()+"', usertype = '"+utype.getSelectedItem()
                +"',status = '"+status.getSelectedItem()+"' WHERE p_id = '"+p_id.getText()+"'");
              new ManageUsers().setVisible(true);
                    this.setVisible(false);
                    this.dispose();
   }
    }//GEN-LAST:event_updateActionPerformed

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        Session sess = Session.getInstance();
       int pid = sess.getPid();
       if(sess.getPid() == 0){
       new noAccount().setVisible(true);
       this.setVisible(false);
       this.dispose();
       }
    }//GEN-LAST:event_formWindowActivated

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
       ManageUsers user = new ManageUsers();
       user.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void ctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ctActionPerformed

    private void utypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_utypeActionPerformed

    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passActionPerformed

    private void unActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this user?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            int userId = Integer.parseInt(p_id.getText()); 
            dbConnect connect = new dbConnect();
            Connection con = connect.getConnection();

            String query = "DELETE FROM users WHERE p_id = ?";
            try (PreparedStatement pst = con.prepareStatement(query)) {
                pst.setInt(1, userId);
                int rowsDeleted = pst.executeUpdate();

                if (rowsDeleted > 0) {
                    JOptionPane.showMessageDialog(null, "User deleted successfully.");
                    // Clear the fields after deletion
                    fn.setText("");
                    ct.setText("");
                    em.setText("");
                    cn.setText("");
                    un.setText("");
                    p_id.setText("");
                    utype.setSelectedIndex(0); //reset combo box to default index.

                    // Optionally, refresh a table or list of users if you have one
                    // refreshUserTable();
                } else {
                    JOptionPane.showMessageDialog(null, "User not found with the specified ID.");
                }
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Invalid User ID format.");
            ex.printStackTrace();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error deleting user: " + ex.getMessage());
            ex.printStackTrace();
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "An unexpected error occurred: " + e.getMessage());
            e.printStackTrace();
        }
        ManageUsers user = new ManageUsers();
        user.setVisible(true);
        this.dispose();
    }

    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(createUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(createUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(createUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(createUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new createUserForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public rojerusan.RSMaterialButtonCircle add;
    public rojerusan.RSMaterialButtonCircle clear;
    public textfield.TextField cn;
    public textfield.TextField ct;
    public rojerusan.RSMaterialButtonCircle delete;
    public textfield.TextField em;
    public textfield.TextField fn;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public textfield.TextField p_id;
    public textfield.PasswordField pass;
    public javax.swing.JComboBox<String> status;
    public textfield.TextField un;
    public rojerusan.RSMaterialButtonCircle update;
    public javax.swing.JComboBox<String> utype;
    // End of variables declaration//GEN-END:variables
}
